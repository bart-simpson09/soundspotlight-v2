name: 'soundspotlight-v2'
services:
  pgadmin:
    image: dpage/pgadmin4
    container_name: pgAdmin
    ports:
      - '5050:80'
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: dev@dev.dev
      PGADMIN_DEFAULT_PASSWORD: secret
      PGADMIN_CONFIG_SERVER_MODE: 'False'
      PGADMIN_CONFIG_MASTER_PASSWORD_REQUIRED: 'False'
    networks:
      - soundspotlight
  database:
    image: postgres:17.2
    container_name: database
    ports:
      - '5432:5432'
    volumes:
      - database_data:/var/lib/postgresql/data
    env_file:
      - .env
    networks:
      - soundspotlight
  backend:
    build:
      context: .
      dockerfile: Dockerfile
    command: npm run start:dev
    ports:
      - '8080:3000'
    volumes:
      - ./assets:/usr/src/app/src/assets
    develop:
      watch:
        - action: sync
          path: src
          target: /usr/src/app/src
        - action: rebuild
          path: package.json
          target: /usr/src/app/src/package.json
    environment:
      POSTGRES_HOST: database
    env_file:
      - .env
    depends_on:
      - database
      - rabbitmq
    networks:
      - soundspotlight
  rabbitmq:
    image: rabbitmq:3.9-management
    container_name: rabbitmq
    restart: always
    hostname: rabbitmq
    ports:
      - '5672:5672'
      - '15672:15672'
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    networks:
      - soundspotlight
    healthcheck:
      test: [ "CMD", "rabbitmqctl", "status" ]
      interval: 10s
      timeout: 5s
      retries: 3
    env_file:
      - .env

volumes:
  pgadmin_data:
  database_data:
  rabbitmq_data:

networks:
  soundspotlight:
    driver: bridge
